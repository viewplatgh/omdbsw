{"version":3,"sources":["actions/index.js","components/Header.js","containers/Watchlist.js","containers/Search.js","App.js","serviceWorker.js","reducers/index.js","sagas/index.js","index.js"],"names":["SEARCH_OMDB","UPDATE_SEARCH_RESULT","ADD_TO_WATCHLIST","REMOVE_FROM_WATCHLIST","LOAD_WATCHLIST","Header","react_default","a","createElement","className","style","marginTop","Watchlist","_this","this","Fragment","marginLeft","marginRight","props","watchlist","length","map","item","idx","key","concat","imdbID","src","Poster","alt","Title","Year","Type","onClick","e","onRemoveFromWatchlist","Component","ConnectedWatchlist","connect","state","dispatch","index","type","removeFromWatchlist","Search","i","chunks","result","push","slice","placeholder","ref","node","keywordRef","size","onKeyDown","searchRef","click","value","trim","onDispatchSearch","tiles","idx0","tile","idx1","onAddToWatchlist","ConnectedSearch","keyword","searchOMDB","addToWatchlist","App","store","containers_Watchlist","containers_Search","Boolean","window","location","hostname","match","initialState","fetchOMDB","saveWatchlist","rootSaga","action","url","response","jsonData","regenerator_default","wrap","_context","prev","next","fetch","sent","json","put","stop","_marked","_context2","select","localStorage","setItem","JSON","stringify","_marked2","_context3","all","takeEvery","_marked3","sagaMiddleware","createSagaMiddleware","createStore","arguments","undefined","Object","objectSpread","toConsumableArray","newWatchlist","splice","parse","getItem","applyMiddleware","run","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.edb75894.chunk.js","sourcesContent":["export const SEARCH_OMDB = 'SEARCH_OMDB';\nexport const UPDATE_SEARCH_RESULT = 'UPDATE_SEARCH_RESULT';\nexport const ADD_TO_WATCHLIST = 'ADD_TO_WATCHLIST';\nexport const REMOVE_FROM_WATCHLIST = 'REMOVE_FROM_WATCHLIST';\nexport const LOAD_WATCHLIST = 'LOAD_WATCHLIST';\n\nexport function searchOMDB(keyword) {\n  return {\n    type: SEARCH_OMDB,\n    keyword\n  };\n}\n\nexport function updateSearchResult(result) {\n  return {\n    type: UPDATE_SEARCH_RESULT,\n    result\n  };\n}\n\nexport function addToWatchlist(item) {\n  return {\n    type: ADD_TO_WATCHLIST,\n    item\n  };\n}\n\nexport function removeFromWatchlist(index) {\n  return {\n    type: REMOVE_FROM_WATCHLIST,\n    index\n  };\n}\n\nexport function loadWatchlist() {\n  return {\n    type: LOAD_WATCHLIST\n  };\n}\n","import React from 'react';\n\nexport default function Header() {\n  return (\n    <div className=\"tile is-ancestor\" style={{ marginTop: 20 }}>\n      <div className=\"tile is-parent is-12\">\n        <div className=\"tile is-child\">\n          <p className=\"title\">OMDB api demo made by Rob Lao</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { removeFromWatchlist } from '../actions';\n\nclass Watchlist extends Component {\n  render() {\n    return (\n      <>\n        <section className=\"section\">\n          <table\n            className=\"table\"\n            style={{ marginLeft: 'auto', marginRight: 'auto' }}\n          >\n            <thead>\n              <tr>\n                <th>\n                  <b />\n                </th>\n                <th>\n                  <b>Poster</b>\n                </th>\n                <th>\n                  <b>Title</b>\n                </th>\n                <th>\n                  <b>Year</b>\n                </th>\n                <th>\n                  <b>Type</b>\n                </th>\n                <th>\n                  <b>IMDB ID</b>\n                </th>\n                <th>\n                  <b />\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.props.watchlist.length > 0 ? (\n                this.props.watchlist.map((item, idx) => {\n                  return (\n                    <tr key={`${item.imdbID}`}>\n                      <td>{idx}</td>\n                      <td>\n                        <figure className=\"image is-48x48\">\n                          <img src={item.Poster} alt={item.Title} />\n                        </figure>\n                      </td>\n                      <td>{item.Title}</td>\n                      <td>{item.Year}</td>\n                      <td>{item.Type}</td>\n                      <td>{item.imdbID}</td>\n                      <td>\n                        <button\n                          className=\"button is-danger\"\n                          onClick={e => {\n                            this.props.onRemoveFromWatchlist(idx);\n                          }}\n                        >\n                          Delete\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })\n              ) : (\n                <>\n                  <tr>\n                    <td>\n                      <p />\n                    </td>\n                    <td>\n                      <p>Empty watchlist</p>\n                    </td>\n                    <td>\n                      <p />\n                    </td>\n                    <td>\n                      <p />\n                    </td>\n                    <td>\n                      <p />\n                    </td>\n                    <td>\n                      <p />\n                    </td>\n                    <td>\n                      <p />\n                    </td>\n                  </tr>\n                </>\n              )}\n            </tbody>\n          </table>\n        </section>\n      </>\n    );\n  }\n}\n\nconst mapWatchlistStateToProps = state => {\n  return {\n    watchlist: state.watchlist\n  };\n};\n\nconst mapWatchlistStateToDispatch = dispatch => {\n  return {\n    onRemoveFromWatchlist: index => dispatch(removeFromWatchlist(index))\n  };\n};\n\nconst ConnectedWatchlist = connect(\n  mapWatchlistStateToProps,\n  mapWatchlistStateToDispatch\n)(Watchlist);\n\nexport default ConnectedWatchlist;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { searchOMDB, addToWatchlist } from '../actions';\n\nconst chunkLength = 4;\n\nclass Search extends Component {\n  keywordRef;\n  searchRef;\n\n  render() {\n    let chunks = [];\n    let i;\n    for (i = 0; i < this.props.result.length; i += chunkLength) {\n      chunks.push(this.props.result.slice(i, i + chunkLength));\n    }\n    return (\n      <>\n        <section className=\"section\">\n          <nav className=\"level\">\n            <div className=\"level-item\">\n              <div className=\"field has-addons\">\n                <p className=\"control\">\n                  <input\n                    className=\"input\"\n                    type=\"text\"\n                    placeholder=\"Type anything to search...\"\n                    ref={node => (this.keywordRef = node)}\n                    size=\"50\"\n                    onKeyDown={e => {\n                      if (e.key === 'Enter') {\n                        this.searchRef.click();\n                      }\n                    }}\n                  />\n                </p>\n                <p className=\"control\">\n                  <button\n                    className=\"button is-primary\"\n                    ref={node => (this.searchRef = node)}\n                    onClick={e => {\n                      if (!this.keywordRef.value.trim()) {\n                        return;\n                      }\n\n                      this.props.onDispatchSearch(this.keywordRef.value.trim());\n                    }}\n                  >\n                    Search\n                  </button>\n                </p>\n              </div>\n            </div>\n          </nav>\n        </section>\n        <section className=\"section\">\n          {chunks.map((tiles, idx0) => {\n            return (\n              <div className=\"tile is-ancestor\" key={`anc-${idx0}`}>\n                {tiles.map((tile, idx1) => {\n                  return (\n                    <div\n                      className={`tile is-parent is-${12 / chunkLength}`}\n                      key={`par-${idx0}-${idx1}`}\n                    >\n                      <article className=\"tile is-child box\">\n                        <p className=\"subtitle is-5\">\n                          <b>{tile.Title}</b>\n                        </p>\n                        <p className=\"subtitle is-6\">\n                          {tile.Type}, {tile.Year}, {tile.imdbID}\n                        </p>\n                        <figure className=\"image is-3by4\">\n                          <img src={tile.Poster} alt={tile.Title} />\n                        </figure>\n                        <br />\n                        <button\n                          className=\"button is-info\"\n                          onClick={e => {\n                            this.props.onAddToWatchlist(tile);\n                          }}\n                        >\n                          Add to watchlist\n                        </button>\n                      </article>\n                    </div>\n                  );\n                })}\n              </div>\n            );\n          })}\n        </section>\n      </>\n    );\n  }\n}\n\nconst mapSearchStateToProps = state => {\n  return {\n    keyword: state.keyword,\n    result: state.result\n  };\n};\n\nconst mapSearchStateToDispatch = dispatch => {\n  return {\n    onDispatchSearch: keyword => dispatch(searchOMDB(keyword)),\n    onAddToWatchlist: item => dispatch(addToWatchlist(item))\n  };\n};\n\nconst ConnectedSearch = connect(\n  mapSearchStateToProps,\n  mapSearchStateToDispatch\n)(Search);\n\nexport default ConnectedSearch;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { loadWatchlist } from './actions';\n\nimport Header from './components/Header';\nimport Watchlist from './containers/Watchlist';\nimport Search from './containers/Search';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.store.dispatch(loadWatchlist());\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <Header />\n          <Watchlist />\n          <Search />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  SEARCH_OMDB,\n  UPDATE_SEARCH_RESULT,\n  ADD_TO_WATCHLIST,\n  REMOVE_FROM_WATCHLIST,\n  LOAD_WATCHLIST\n} from '../actions';\n\nconst initialState = {\n  keyword: '',\n  result: [],\n  watchlist: []\n};\n\nexport default function omdbReducer(state = initialState, action) {\n  switch (action.type) {\n    case SEARCH_OMDB:\n      return { ...state, keyword: action.keyword };\n    case UPDATE_SEARCH_RESULT:\n      return { ...state, result: action.result };\n    case ADD_TO_WATCHLIST:\n      return { ...state, watchlist: [...state.watchlist, action.item] };\n    case REMOVE_FROM_WATCHLIST:\n      let newWatchlist = [...state.watchlist];\n      newWatchlist.splice(action.index, 1);\n      return { ...state, watchlist: newWatchlist };\n    case LOAD_WATCHLIST:\n      try {\n        newWatchlist = JSON.parse(localStorage.getItem('omdbsw'));\n        if (!newWatchlist) {\n          return state;\n        }\n      } catch (e) {\n        return state;\n      }\n      return { ...state, watchlist: newWatchlist };\n    default:\n      return state;\n  }\n}\n","import { all, call, put, select, takeEvery } from 'redux-saga/effects';\nimport {\n  SEARCH_OMDB,\n  ADD_TO_WATCHLIST,\n  REMOVE_FROM_WATCHLIST\n} from '../actions';\nimport { updateSearchResult } from '../actions';\n\nexport function* fetchOMDB(action) {\n  const url = `https://www.omdbapi.com/?apikey=2dd23c8d&s=${action.keyword}`;\n  const response = yield fetch(url);\n  const jsonData = yield response.json();\n  yield put(updateSearchResult(jsonData.Search));\n}\n\nexport function* saveWatchlist() {\n  const watchlist = yield select(state => state.watchlist);\n  localStorage.setItem('omdbsw', JSON.stringify(watchlist));\n}\n\nexport default function* rootSaga() {\n  yield all([\n    takeEvery(SEARCH_OMDB, fetchOMDB),\n    takeEvery(ADD_TO_WATCHLIST, saveWatchlist),\n    takeEvery(REMOVE_FROM_WATCHLIST, saveWatchlist)\n  ]);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport './index.css';\nimport 'bulma/css/bulma.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport omdbReducer from './reducers';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(omdbReducer, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App store={store} />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}